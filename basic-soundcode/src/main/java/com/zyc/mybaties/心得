对于mybaties 框架总览而言 其实是非常灵活的

核心模块

执行器的设计 以及对jdbc的封装

动态代理的抽象运用

metaobjec 工具类的抽象运用


一级二级缓存的设计


数据结果的处理


插件的设计



整个框架非常灵活而且预留很多扩展的节点


这里面涵盖里一个很重的思想 就是元数据的抽象 我们知道 对于一个类而言 有类名 有方法 有局部变量 有父接口 父类等等等等


通过 对类元数据的抽象出，衍生出很多通用的模块化设计理念。这里给我一个很大的启发
是什么呢？ 就是如果灵活可扩展 已经最大程度的适用 就是抽离对象等的元数据，来操作相关的元数据信息来达到我们的需求设计
比如一个商品  （商品基本信息 ，商品属性信息（大小属性，颜色属性....等等等））通过聚合出一个具体商品信息。对于具体操作划分出具体的
业务类。来隔离相关处理。脱离查找的耦合，是的问题局部化。这里其实很多框架都有这种思想